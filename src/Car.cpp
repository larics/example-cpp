/* Car class implementation.
   Developer documentation is generated from header-files only.
   No docs will be autogenerated from this file.
 */

#include "Car.h"

namespace Vehicles
{
    
Car::Car(std::string model, double max_speed)
    : model_(model),
      max_speed_(max_speed),
      current_speed_(0.0)
{

}

Car::~Car()
{
    // Release all resources here
}
    
/* virtual */
double Car::accelerate(double speed)
{
    // Limit the speed to max_speed
    if (speed > max_speed_)
    {
        speed = max_speed_;
    }

    if (speed > current_speed_)
    {
        // To accelerate, the desired speed must exceed the current speed
        current_speed_ = speed;
    }
    
    return current_speed_;
}

/* virtual */
double Car::decelerate(double speed)
{
    // Limit the speed to 0
    if (speed < 0.0)
    {
        speed = 0.0;
    }

    if (speed < current_speed_)
    {
        // To decelerate, the desired speed must be lower than the current sped
        current_speed_ = speed;
    }

    return current_speed_;
}

} // namespace Vehicles
